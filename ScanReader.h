#ifndef SCANREADER_H
#define SCANREADER_H

#include <QDialog>

class QWidget;
class DataScanSocket;
class Calculation;
class QThread;
class QGroupBox;
class ScanReader : public QDialog
{
    Q_OBJECT
private slots:
    void connect();
    void cutconnect();
    void start();
    void PrintCalcStop();
    void PrintTcpStop();
    void Printstatus(const QString &status);
    void sendObj();
    void save();

signals:
    /* ! Attention:
     * Signals are automatically generated by the moc and must not be implemented in the .cpp file.
     * They can never have return types (i.e. use void).
     *
     * if been implemented, then error "multiple definition of **"
     */
    void startsave(const QString&);
    void stop();
    void disconnect();
    void train();
    void test();
    void discardData();
    void setObj(int);

private:
//    QWidget     *myWidget;
    DataScanSocket *dsocket;
    Calculation *calcprocess;
    QThread *tcpThread;
    QThread *calcThread;   
//    bool running;
//    bool saving;
    QString mipAddress;   // ip address of server
    ushort mPort;         // port of server

    // create widget
    QGroupBox *createConnectGBox();    // GroupBox containing parameters for socket connection
    QGroupBox *createExpGBox();        // GroupBox containing parameters for experimental flow control
    QGroupBox *createOtherGBox();      // GroupBox containing other related parameters

    // flags
    bool s_saving;

public:
    ScanReader( QWidget *parent=0);
//    ~ScanReader();

};
#endif // SCANREADER_H
